var ibmVideoStreamingPlayerAPI =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/dom.js":
/*!********************!*\
  !*** ./src/dom.js ***!
  \********************/
/*! exports provided: addEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addEvent\", function() { return addEvent; });\n/**\n * @param {HTMLElement} target\n * @param {string} event\n * @param {Function} cb\n */\nfunction addEvent(target, event, cb) {\n  if (target.addEventListener) {\n    target.addEventListener(event, cb, false);\n  } else {\n    target.attachEvent(\"on\".concat(event), cb);\n  }\n}\n\n//# sourceURL=webpack://ibmVideoStreamingPlayerAPI/./src/dom.js?");

/***/ }),

/***/ "./src/errors.js":
/*!***********************!*\
  !*** ./src/errors.js ***!
  \***********************/
/*! exports provided: ERRORS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ERRORS\", function() { return ERRORS; });\nvar ERRORS = {\n  INVALID_IFRAME_ID: 'Reference found by id is null, it must a HTMLIFrameElement',\n  INVALID_IFRAME_REFERENCE: 'Reference is not an instance of HTMLIFrameElement',\n  INVALID_IFRAME_SRC: 'Invalid iframe source'\n};\n\n//# sourceURL=webpack://ibmVideoStreamingPlayerAPI/./src/errors.js?");

/***/ }),

/***/ "./src/host.js":
/*!*********************!*\
  !*** ./src/host.js ***!
  \*********************/
/*! exports provided: getHostName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHostName\", function() { return getHostName; });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"./src/errors.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar hostExpression = new RegExp('^(http(?:s)?://[^/]+)', 'im');\n/**\n * @param {string} url\n * @throws {TypeError}\n * @returns {string} hostName\n */\n\nfunction getHostName(url) {\n  if (url.indexOf('http') !== 0) {\n    url = window.location.protocol + url;\n  }\n\n  try {\n    var _url$match = url.match(hostExpression),\n        _url$match2 = _slicedToArray(_url$match, 2),\n        hostName = _url$match2[1];\n\n    return hostName;\n  } catch (_) {\n    throw new TypeError(_errors__WEBPACK_IMPORTED_MODULE_0__[\"ERRORS\"].INVALID_IFRAME_SRC);\n  }\n}\n\n//# sourceURL=webpack://ibmVideoStreamingPlayerAPI/./src/host.js?");

/***/ }),

/***/ "./src/iframe.js":
/*!***********************!*\
  !*** ./src/iframe.js ***!
  \***********************/
/*! exports provided: getIframe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getIframe\", function() { return getIframe; });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"./src/errors.js\");\n\n/**\n * @param {HTMLIFrameElement|string} iframeOrId\n * @throws {TypeError}\n */\n\nfunction getIframe(iframeOrId) {\n  var iframe = iframeOrId;\n\n  if (typeof iframeOrId === 'string') {\n    iframe = getIframeById(iframeOrId);\n  }\n\n  if (!(iframe instanceof HTMLIFrameElement)) {\n    throw new TypeError(_errors__WEBPACK_IMPORTED_MODULE_0__[\"ERRORS\"].INVALID_IFRAME_REFERENCE);\n  }\n\n  return iframe;\n}\n/**\n * @param {string} id\n * @throws {TypeError}\n * @returns {HTMLIFrameElement} iframe\n */\n\nfunction getIframeById(id) {\n  var iframe = document.getElementById(id);\n\n  if (!iframe) {\n    throw new TypeError(_errors__WEBPACK_IMPORTED_MODULE_0__[\"ERRORS\"].INVALID_IFRAME_ID);\n  }\n\n  return iframe;\n}\n\n//# sourceURL=webpack://ibmVideoStreamingPlayerAPI/./src/iframe.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _iframe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iframe */ \"./src/iframe.js\");\n/* harmony import */ var _host__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./host */ \"./src/host.js\");\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom */ \"./src/dom.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/** !\n * Video Streaming Player Api\n * https://video.ibm.com/\n *\n * The IBM Video Streaming Player API provides methods to control\n * live streams and on demand playback of embedded players.\n */\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ((function () {\n  var instances = {};\n\n  function Embed(iframe) {\n    return createInstance(iframe);\n  }\n\n  function createInstance(iframe) {\n    var iframeElement = Object(_iframe__WEBPACK_IMPORTED_MODULE_0__[\"getIframe\"])(iframe);\n\n    var instance = function (element) {\n      var isReady = false;\n      var instanceObj;\n      var embedHost;\n      var sStreamConnected = false;\n      var sStreamHost;\n      var sStreamElement;\n      var cmdQueue = [];\n      var getters = {};\n      var events = {};\n      var ieHackEvent = [];\n      embedHost = Object(_host__WEBPACK_IMPORTED_MODULE_1__[\"getHostName\"])(element.getAttribute('src')).toLowerCase();\n      element.onload = onLoadElement;\n\n      function addCommandQueue(method) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        if (method === 'socialstream') {\n          Object(_dom__WEBPACK_IMPORTED_MODULE_2__[\"addEvent\"])(window, 'message', onSocialFrame);\n          sStreamElement = Object(_iframe__WEBPACK_IMPORTED_MODULE_0__[\"getIframe\"])(args[0]);\n          sStreamHost = Object(_host__WEBPACK_IMPORTED_MODULE_1__[\"getHostName\"])(sStreamElement.getAttribute('src'));\n          sStreamConnected = true;\n\n          if (ieHackEvent.length) {\n            for (var i = 0, il = ieHackEvent.length; i < il; i++) {\n              onMessage(ieHackEvent[i]);\n            }\n          }\n\n          return;\n        }\n\n        if (!isReady) {\n          if (!cmdQueue) {\n            cmdQueue = [];\n          }\n\n          cmdQueue.push([method].concat(args));\n          sendMessage(element, embedHost, {\n            cmd: 'probe'\n          });\n          return;\n        }\n\n        if (args[0] && typeof args[0] === 'function') {\n          if (!getters[method]) {\n            getters[method] = [];\n          }\n\n          getters[method].push(args[0]);\n        }\n\n        sendMessage(element, embedHost, {\n          cmd: method,\n          args: args\n        });\n      }\n\n      function execCommandQueue() {\n        if (cmdQueue) {\n          while (cmdQueue.length) {\n            addCommandQueue.apply(this, cmdQueue.shift());\n          }\n\n          cmdQueue = null;\n        }\n      }\n\n      function onSocialFrame(e) {\n        var doc = sStreamElement;\n\n        if (doc && doc.contentWindow && doc.contentWindow === e.source) {\n          instanceObj.onmessage(e);\n        } else if (e.source === sStreamElement.id) {\n          instanceObj.onmessage(e);\n        }\n      }\n\n      function onSStreamMsg(e) {\n        var d = JSON.parse(e.data);\n\n        if (!!d.cmd && d.cmd === 'ready') {\n          sendMessage(sStreamElement, sStreamHost, {\n            cmd: 'ready'\n          });\n          return;\n        }\n\n        addCommandQueue.apply(this, [d.cmd].concat(_toConsumableArray(d.args)));\n      }\n\n      function onLoadElement() {\n        sendMessage(element, embedHost, {\n          cmd: 'ready'\n        });\n      }\n\n      function ready() {\n        if (isReady) {\n          return;\n        }\n\n        isReady = true;\n        sendMessage(element, embedHost, {\n          cmd: 'apihandshake',\n          args: []\n        });\n        execCommandQueue();\n\n        if (sStreamElement) {\n          sendMessage(sStreamElement, sStreamHost, {\n            cmd: 'viewer_ready'\n          });\n        }\n      }\n\n      function callMethod() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        addCommandQueue.apply(this, args);\n      }\n\n      instanceObj = {\n        host: embedHost,\n        callMethod: callMethod,\n        getProperty: function getProperty() {\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          callMethod.apply(this, args);\n        },\n        addListener: function addListener(event, callback) {\n          if (!events[event]) {\n            events[event] = [];\n          }\n\n          events[event].push(callback);\n        },\n        removeListener: function removeListener(event, callback) {\n          if (callback) {\n            for (var i = 0, eL = events[event].length; i < eL; i++) {\n              if (events[event][i] === callback) {\n                events[event].splice(i, 1);\n              }\n            }\n          } else {\n            events[event] = null;\n          }\n        },\n        onmessage: function onmessage(e) {\n          var d;\n\n          if (!embedHost && !sStreamHost) {\n            ieHackEvent.push({\n              origin: e.origin,\n              data: e.data\n            });\n          }\n\n          if (e.origin.toLowerCase() === embedHost) {\n            try {\n              d = JSON.parse(e.data);\n            } catch (err) {\n              return;\n            }\n\n            if (d.sstream) {\n              onSStreamMsg(e);\n              return;\n            }\n\n            if (!!d.event && d.event.ready) {\n              ready();\n              dispatchEvent(events, 'ready');\n            }\n\n            if (!!d.event && d.event.live === true) {\n              dispatchEvent(events, 'live');\n              return;\n            }\n\n            if (!!d.event && d.event.live === false) {\n              dispatchEvent(events, 'offline');\n              return;\n            }\n\n            if (!!d.event && !d.event.ready) {\n              Object.keys(d.event).forEach(function (key) {\n                dispatchEvent(events, key, d.event[key]);\n              });\n            }\n\n            if (d.property) {\n              Object.keys(d.property).forEach(function (key) {\n                callGetter(getters, key, d.property[key]);\n              });\n            }\n          } else if (sStreamConnected && e.origin === sStreamHost) {\n            onSStreamMsg(e);\n          }\n        },\n        destroy: function destroy() {\n          isReady = false;\n          embedHost = '';\n          sStreamConnected = false;\n          sStreamHost = '';\n          sStreamElement = null;\n          cmdQueue = [];\n          getters = {};\n          events = {};\n          ieHackEvent = [];\n\n          if (instances[element.id]) {\n            instances[element.id] = null;\n            delete instances[element.id];\n          }\n\n          element = null;\n        }\n      };\n      return instanceObj;\n    }(iframeElement);\n\n    if (!iframeElement.id) {\n      iframeElement.id = \"Embed\".concat(Math.ceil(Math.random() * 100000));\n    }\n\n    instance.id = iframeElement.id;\n    instances[iframeElement.id] = instance;\n    return instance;\n  }\n\n  function dispatchEvent(events, event, data) {\n    if (!events[event]) {\n      return;\n    }\n\n    events[event].forEach(function (callback) {\n      callback.call(window, event, data);\n    });\n  }\n\n  function callGetter(getters, event, data) {\n    if (!getters[event]) {\n      return;\n    }\n\n    var items = getters[event];\n    getters[event] = null;\n    delete getters[event];\n    items.forEach(function (item) {\n      item.call(window, data);\n    });\n  }\n\n  function onMessage(e) {\n    Object.keys(instances).forEach(function (id) {\n      var instance = instances[id];\n      var doc = document.getElementById(id);\n\n      if (doc && doc.contentWindow) {\n        if (doc.contentWindow === e.source) {\n          instance.onmessage(e);\n        }\n      } else if (typeof e.source === 'string' && e.source === id) {\n        instance.onmessage(e);\n      }\n    });\n  }\n\n  function sendMessage(element, host, data) {\n    element.contentWindow.postMessage(JSON.stringify(data), host);\n  }\n\n  Object(_dom__WEBPACK_IMPORTED_MODULE_2__[\"addEvent\"])(window, 'message', onMessage);\n  window.PlayerAPI = Embed;\n  return Embed;\n})());\n\n//# sourceURL=webpack://ibmVideoStreamingPlayerAPI/./src/index.js?");

/***/ })

/******/ });


export default ibmVideoStreamingPlayerAPI['default'];
